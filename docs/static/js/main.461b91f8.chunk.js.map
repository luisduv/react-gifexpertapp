{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValeu","setInputValeu","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,uBACKC,SAlBY,SAACC,GAClBA,EAAEC,iBAIEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MASlB,UAEA,uBACMO,KAAO,OACbC,MAAUT,EACVU,SA1BuB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,UAoBvB,Y,+BC5BKG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAElB,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZtB,kBA0BZM,GA1BY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OAAS,sBACDc,UAAY,yCADX,UAEL,qBACIC,IAAQf,EACZgB,IAAQN,IAJH,IAKF,kCAAOA,EAAP,WCPEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGlB,ECHoB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAU,WAENxB,EAAQC,GAEPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAIGqB,EDpB+BK,CAAa1B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAKtB,OAAS,qCAGL,qBACGJ,UAAY,yCADf,cAC4DhB,EAD5D,OAIIoB,GAAW,mBAAIJ,UAAY,wCAAhB,0BAGX,qBACIA,UAAY,YADhB,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OAAM,cAChB,EADgB,eACiBA,GAAbA,EAAIC,aEvBvCgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAIA,OAAS,qCACL,gDADK,KAEqB,cAC1B,EAD0B,CACdA,cAAkBA,IAHzB,IAIF,uBAEH,6BAII2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cACA,EADA,CAEAA,SAAaA,GADGA,QAZnB,S,MCDb6B,IAASC,OAEL,cACA,EADA,IAEAC,SAASC,eAAe,W","file":"static/js/main.461b91f8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValeu, setInputValeu] = useState('');\r\n\r\n    const handleTinputChange = (e) => {\r\n        setInputValeu(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n\r\n        if (inputValeu.trim().length > 2) {\r\n\r\n            setCategories(cats => [inputValeu, ...cats]);\r\n            setInputValeu('');\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValeu }\r\n        onChange = {\r\n            (handleTinputChange)\r\n        }\r\n        />     <\r\n        /form>         \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n\r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=66yWr1AW1zzhSqHT6DR3809jF4kPbNMm`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    /* console.log({id,title,url}); */\r\n\r\n    return ( <\r\n        div className = \"card animate__animated animate__fadeIn\" >\r\n        <\r\n        img src = { url }\r\n        alt = { title }\r\n        /> <p > { title } </p >\r\n\r\n        <\r\n        /div>\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n        const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n\r\n\r\n        return ( <\r\n            >\r\n\r\n            <\r\n            h3 className = \"card animate__animated animate__fadeIn\" > { category } < /h3>\r\n\r\n            {\r\n                loading && < p className = \"card animate__animated animate__flash\" > loading... < /p>  }\r\n\r\n\r\n                <\r\n                div className = \"card-grid\" >\r\n\r\n                    {\r\n                        images.map(img => ( <\r\n                            GifGridItem key = { img.id } {...img }\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n\r\n                <\r\n                /div> \r\n\r\n                <\r\n                />\r\n            )\r\n        }","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n\r\n        .then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n\r\n\r\n    return ( < >\r\n        <\r\n        h2 > GifExpertApp < /h2>  <\r\n        AddCategory setCategories = { setCategories }\r\n        /> <hr / >\r\n\r\n        <\r\n        ol >\r\n\r\n        {\r\n            categories.map((category =>\r\n                <\r\n                GifGrid key = { category }\r\n                category = { category }\r\n                />\r\n            ))\r\n        }\r\n\r\n        <\r\n        /ol>  <\r\n        />\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n\n    <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}